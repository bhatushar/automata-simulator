/* Sidebar container */
.sidebar {
    padding: 10px;
    /* Defined in App.css */
    grid-area: sidebar;
    overflow-y: auto;
    color: #cecece;
    background-color: #1a171d;
}


/*********************************************
    Properties common for all form elements
**********************************************/
form > h1 { font-weight: normal; margin: 5px; }
/* Vertically and horizontally center the label */
form > label { justify-self: center; align-self: center; }
form > input[type="text"], textarea {
    padding: 5px;
    resize: vertical;
    overflow: auto;
    color: #eeeeee;
    border: none;
    border-bottom: 2px solid #be2c0a;
    background-color: #0e0e0e;
}
/* These should be extended by a custom button class */
form > input[type="submit"], button {
    color: #eeeeee;
    border-radius: 2px;
    border: 1px solid #000000;
}


/************************************
Custom propertied for submit buttons
*************************************/
.btn-primary { border-color: #164422 !important; background-color: #176324; }
.btn-primary:active { background-color: #164422; }

.btn-secondary { border-color: #440b05 !important; background-color: #87160e; }
.btn-secondary:active { background-color: #440b05; }

.btn-alt { border-color: #112c44 !important; background-color: #133e63; }
.btn-alt:active { background-color: #112c44; }


/******************************
First form - Model initializer
*******************************/
#modelInitializer {
    display: grid;
    /* Columns split between label and input */
    grid-template-columns: 1fr 4fr;
    /* 3 rows for input - states list, accepted states, transition function
       1 row for submit button */
    grid-template-rows: 50px repeat(3, minmax(80px, auto)) 30px;
    grid-template-areas:
            "header header"
            "states-label states-input"
            "accepted-label accepted-input"
            "transition-label transition-input"
            ". build-btn";
    grid-gap: 10px;
}

/* Aligning elements in the grid */
#modelInitializer > h1 { grid-area: header; }
label[for="states"] { grid-area: states-label; }
#states { grid-area: states-input; }
label[for="acceptedStates"] { grid-area: accepted-label; }
#acceptedStates { grid-area: accepted-input; }
label[for="transition"] { grid-area: transition-label; }
#transition { grid-area: transition-input; }
#buildBtn { grid-area: build-btn; }


/************************
Second form - Test model
*************************/
#modelTest {
    display: grid;
    grid-template-columns: 1fr 2fr 2fr;
    grid-template-rows: 50px minmax(40px, auto) 30px;
    grid-template-areas:
            "header header header"
            "tape-label tape-input tape-input"
            ". tape-toggle run-btn";
    grid-gap: 10px;
}

/* Aligning items in the grid */
#modelTest > h1 { grid-area: header; }
label[for="tape"] { grid-area: tape-label; }
#tape { grid-area: tape-input; }
#tapeToggle { grid-area: tape-toggle; }
#runBtn { grid-area: run-btn; }
/*#resetBtn { grid-area: reset-btn; }*/


/**************
Result section
***************/
#automataResult > h2 { font-weight: normal; }
#resultContainer {
    width: 95%;
    min-height: 40px;
    height: auto;
    padding: 5px;
    background-color: #251e34;
}
